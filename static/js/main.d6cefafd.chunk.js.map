{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","cn","TodoList","todos","map","combineTodosAndUser","userId","usersFromServer","find","App","useState","setTitle","choosedUser","setChoosedUser","setTodos","titleError","setTittleError","choosedUserError","setChoosedUserError","action","method","onSubmit","event","preventDefault","newId","sort","idOne","idTwo","findedUser","newTodo","prevTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6cefafd.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User | undefined,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  if (user) {\n    const { name, email } = user;\n\n    return (\n      <a className=\"UserInfo\" href={`mailto:${email}`}>\n        {name}\n      </a>\n    );\n  }\n\n  return (\n    <a className=\"UserInfo\" href=\"./\">\n      Unknown user\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { TodosList } from '../../types/TodoList';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodosList;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { ChangeEvent, FormEvent, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { TodosList } from './types/TodoList';\n\nconst combineTodosAndUser = todosFromServer.map(todo => (\n  {\n    ...todo,\n    user: usersFromServer.find(user => user.id === todo.userId),\n  }\n));\n\nexport const App = () => {\n  const [title, setTitle] = useState<string>('');\n  const [choosedUser, setChoosedUser] = useState<string>('');\n  const [todos, setTodos] = useState<TodosList>(combineTodosAndUser);\n  const [titleError, setTittleError] = useState<boolean>(false);\n  const [choosedUserError, setChoosedUserError] = useState<boolean>(false);\n\n  const handleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTittleError(false);\n  };\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setChoosedUser(event.target.value);\n    setChoosedUserError(false);\n  };\n\n  const addTodo = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (title && choosedUser) {\n      const newId = [...todos].sort((idOne, idTwo) => {\n        return idTwo.id - idOne.id;\n      })[0].id + 1;\n\n      const findedUser = usersFromServer.find(user => user.id === +choosedUser);\n\n      const newTodo = {\n        id: newId,\n        title,\n        completed: false,\n        userId: +choosedUser,\n        user: findedUser,\n      };\n\n      setTodos((prevTodos) => (\n        [...prevTodos, newTodo]\n      ));\n      setTitle('');\n      setChoosedUser('');\n    } else {\n      if (!title) {\n        setTittleError(true);\n      }\n\n      if (!choosedUser) {\n        setChoosedUserError(true);\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={addTodo}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleInput}\n          />\n          {titleError\n            && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={choosedUser}\n            onChange={handleSelect}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {choosedUserError\n            && (\n              <span className=\"error\">\n                Please choose a user\n              </span>\n            )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}